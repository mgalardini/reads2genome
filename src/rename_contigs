#!/usr/bin/env python
'''
Renames the sequence of a fasta file
'''
# Copyright (C) <2015> EMBL-European Bioinformatics Institute

# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# Neither the institution name nor the name reads2genome
# can be used to endorse or promote products derived from
# this software without prior written permission.
# For written permission, please contact <marco@ebi.ac.uk>.

# Products derived from this software may not be called reads2genome
# nor may reads2genome appear in their names without prior written
# permission of the developers. You should have received a copy
# of the GNU General Public License along with this program.
# If not, see <http://www.gnu.org/licenses/>.

__author__ = "Marco Galardini"
__version__ = '0.1.0'

def get_options():
    import argparse
    import sys

    # create the top-level parser
    description = "Renames the sequence of a fasta file"
    parser = argparse.ArgumentParser(description = description,
                                     prog = 'rename_contigs')

    parser.add_argument('contigs', action='store',
                        type=argparse.FileType('rb'),
                        help='Contigs FASTA stream or file ("-" for STDIN)')
    parser.add_argument('--prefix', action='store',
                        dest='prefix',
                        default='contig_',
                        help='Contigs prefix [Default: contig_XX]')

    parser.add_argument('--version', action='version',
                         version='%(prog)s '+__version__)

    return parser.parse_args()

if __name__ == "__main__":
    options = get_options()

    import sys
    from Bio import SeqIO

    i = 0
    for s in SeqIO.parse(options.contigs, 'fasta'):
        i += 1
        s.description = ''
        s.id = '%s%04d'%(options.prefix, i)
        SeqIO.write(s, sys.stdout, 'fasta')

