#!/usr/bin/env python
'''
Filter a fasta file, removing sequences under a specified length
'''

__author__ = "Marco Galardini"
__version__ = '0.1.0'

def get_options():
    import argparse
    import sys

    # create the top-level parser
    description = "Remove short entries from a FASTA file"
    parser = argparse.ArgumentParser(description = description,
                                     prog = 'filter_contigs')

    parser.add_argument('contigs', action='store',
                        type=argparse.FileType('rb'),
                        help='Contigs FASTA stream or file ("-" for STDIN)')
    parser.add_argument('--length', action='store',
                        dest='length',
                        type=int,
                        default=1000,
                        help='Contigs minimum length [Default: 1000]')

    parser.add_argument('--version', action='version',
                         version='%(prog)s '+__version__)

    return parser.parse_args()

if __name__ == "__main__":
    options = get_options()

    import sys
    from Bio import SeqIO

    SeqIO.write(filter(lambda x: len(x) >= options.length,
                      SeqIO.parse(options.contigs, 'fasta')),
               sys.stdout, 'fasta')
